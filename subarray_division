import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'birthday' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY s
     *  2. INTEGER d
     *  3. INTEGER m
     */

    public static int birthday(List<Integer> s, int d, int m) {
    // Write your code here
        int result=0;
        System.out.println("s.size(): "+s.size());
        System.out.println("s.size()-m: "+(s.size()-m));
        if(s.size()-m>=0){
            if(s.size()==1){
                // there is only 1 element in the array
                // check if they are asking for a valid length
                // check if element == d
                if(m==s.size()){
                    if(s.get(0)==d){
                        return 1;
                    }else{
                        return 0;
                    }
                }else{
                    return 0;
                }
            }
            
            
            for(int i=0;i<s.size()-m+1;i++){
                System.out.println("Entered Loop");
                System.out.println("i: "+i);
                System.out.println("i+m: "+(i+m));
                List<Integer> chocLength= s.subList(i,i+m);
                Integer sumChocLength = chocLength.stream().reduce(0,(a,b)->a+b);
                System.out.println("sumChocLength: "+sumChocLength);
                if(sumChocLength==d){
                    result++;
                }
            }
        }else{
            return 0;
        }
        
        
        return result;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> s = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int d = Integer.parseInt(firstMultipleInput[0]);

        int m = Integer.parseInt(firstMultipleInput[1]);

        int result = Result.birthday(s, d, m);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
