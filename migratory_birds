import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.Map.Entry;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'migratoryBirds' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int migratoryBirds(List<Integer> arr) {
    // Write your code here
        List<Integer> maxValueKeys= new ArrayList<Integer>();
        int maxCount=0;
        // Generate a hashmap of frequencies of list elements
        Map<Integer,Integer> hm= new HashMap<Integer,Integer>();
        
        for(Integer i:arr){
            Integer j=hm.get(i);
            hm.put(i,(j==null)?1:j+1);
        }
        // Find max value of values in HashMap
        maxCount=Collections.max(hm.values());
        // Find corresponding keys with values == max Value, add to list
        for(Entry<Integer, Integer> entry: hm.entrySet()){
            if(entry.getValue().equals(maxCount)){
                maxValueKeys.add(entry.getKey());
            }
        }
        // Sort list, return smallest.
        if(maxValueKeys.size()!=0){
            Collections.sort(maxValueKeys);
        }
        
        
        //System.out.println(Collections.max(hm.values()));
        return maxValueKeys.get(0);
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
