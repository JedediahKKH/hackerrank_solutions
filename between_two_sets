import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'getTotalX' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY a
     *  2. INTEGER_ARRAY b
     */

    public static int getTotalX(List<Integer> a, List<Integer> b) {
    // Write your code here
        // array a is an array of elements which must be factors of numbers to be considered
        // array b is an array of elemetns which are multiples of numbers to be considered
        int numberOfValidIntegers=0;
        // numbers must be between the largest value of a(INCLUSIVE) and the minimum of b(INCLUSIVE)
        int maxA= Collections.max(a);
        int minB= Collections.min(b);
        
        for(int i=maxA;i<minB+1;i++){
            List<Integer> validAElements=new ArrayList<Integer>();
            List<Integer> validBElements=new ArrayList<Integer>();
            
            boolean validACondition=false;
            boolean validBCondition=false;
            for(int value:a){
                if(i%value==0){
                    validAElements.add(1);
                }
            }
            for(int value:b){
                if(value%i==0){
                    validBElements.add(1);
                }
            }
            
            if(validAElements.size()==a.size()){
                validACondition=true;
            }
            if(validBElements.size()==b.size()){
                validBCondition=true;
            }
            if(validACondition&&validBCondition){
                
                numberOfValidIntegers++;
            }
        }
        
        
        return numberOfValidIntegers;
        
    }

     
}

    


public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int n = Integer.parseInt(firstMultipleInput[0]);

        int m = Integer.parseInt(firstMultipleInput[1]);

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> brr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int total = Result.getTotalX(arr, brr);

        bufferedWriter.write(String.valueOf(total));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
